
cd roles dir
######################
Create a Role for EKS
######################
aws iam create-role \
    --role-name EKSClusterRole \
    --assume-role-policy-document file://eks-trust-policy.json

    ######################
    Attach the policies
    ######################
    aws iam attach-role-policy --role-name EKSClusterRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
    aws iam attach-role-policy --role-name EKSClusterRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEKSServicePolicy


######################
Create Role for EKSNode
######################
aws iam create-role --role-name eksNodeRole \
--assume-role-policy-document file://ec2-eks-trust-policy.json

aws iam update-assume-role-policy --role-name eksNodeRole \
--policy-document file://ec2-eks-trust-policy.json


    ######################
    Attach the policies
    ######################
    aws iam attach-role-policy --role-name eksNodeRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
    aws iam attach-role-policy --role-name eksNodeRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    aws iam attach-role-policy --role-name eksNodeRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    aws iam attach-role-policy --role-name eksNodeRole \
    --policy-arn arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
    aws iam attach-role-policy --role-name eksNodeRole \
    --policy-arn arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
    # added cloud watch policies to eksNodeRole
    aws iam attach-role-policy \
      --role-name eksNodeRole \
      --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    aws iam attach-role-policy \
      --role-name eksNodeRole \
      --policy-arn arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

# Verify the Role
aws iam get-role --role-name eksNodeRole

##########################
Create role for CloudWatch
##########################
# I removed the instance profile from the lunch-template because eks uses the eksNodeRole to create the instance
# profile. Thus i added the cloudwatch agent policies on the eksNodeRole
aws iam create-role \
  --role-name CloudWatchAgentServerRole \
  --assume-role-policy-document file://cloudwatch-trust-policy.json
    ######################
    Attach the policy
    ######################
    aws iam attach-role-policy \
      --role-name CloudWatchAgentServerRole \
      --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    aws iam attach-role-policy \
      --role-name CloudWatchAgentServerRole \
      --policy-arn arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore


########################################################################################################################
The sts:AssumeRole
##################
    It is a key part of AWS Identity and Access Management (IAM) and AWS Security Token Service
(STS). It allows an IAM entity (like a user, group, or service) to temporarily assume a role with permissions
specified in that role's policy.
####################################
Example Use Case for sts:AssumeRole
####################################
EC2 Instance Role:
    When launching an EC2 instance in an EKS node group, the instance assumes an IAM role to access AWS resources (e.g.,
    EKS, S3, or CloudWatch). The sts:AssumeRole action is required in the trust relationship of the role, allowing
    EC2 to assume it.
Cross-Account Access:
    You have two AWS accounts, and you want a user or service in one account to access resources in another. You create
    a role in the second account, allowing sts:AssumeRole for the user or service in the first account.
Temporary Credentials for Automation:
    Applications or scripts use sts:AssumeRole to acquire temporary credentials to perform tasks.


update-role
    aws iam update-assume-role-policy \
        --role-name EKSClusterRole \
        --policy-document file://eks-trust-policy.json
Token
    aws sts assume-role \
      --role-arn arn:aws:iam::908027384199:role/EKSClusterRole \
      --role-session-name Session

########################################################################################################################
#################################
Trust policy eks-trust-policy
#################################
This IAM policy allows the Amazon EKS service (eks.amazonaws.com) to assume a specified IAM role
Effect: "Allow"
    Grants permission for the action to occur
Principal: "Service": "eks.amazonaws.com"
    Specifies that the principal (entity) allowed to assume the role is Amazon EKS service.
Action: "sts:AssumeRole"
    Enables EKS to assume the specified IAM role
    This policy is typically used in Amazon EKS cluster setups to allow EKS control plane components to
    interact with other AWS services on your behalf

#################################
Trust policy ec2-eks-trust-policy
#################################
The policy grants the EC2 service permission to assume a specific IAM role, in enabling Amazon EKS (Elastic Kubernetes
Service). The sts:AssumeRole action is central to this policy, as it allows the EC2 service to acquire temporary
credentials associated with a role

Effect: "Allow"
  Grants permission for the action to occur
Principal: "Service": "ec2.amazonaws.com"
  Specifies the AWS service EC2 as the entity that can assume the role
Action: "sts:AssumeRole"
  This action is typically required when an EC2 instance needs to access AWS resources on your behalf
Condition:
  Includes an additional constraint to restrict how and when the role can be assumed
The StringEquals condition specifies: "sts:ExternalId": "eks-node"
  This external ID is used to prevent unintended entities from assuming the role

EKS uses EC2 instances as worker nodes to run applications.
The EKS-managed nodes require IAM roles to interact with AWS services (like pulling images from ECR, logging to
CloudWatch, etc.).
The external ID (eks-node) acts as a security mechanism to ensure that only intended entities can assume the role.
########################################################################################################################
