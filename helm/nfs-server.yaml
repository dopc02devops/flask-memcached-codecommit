apiVersion: v1
kind: Namespace
metadata:
  name: storage
---
apiVersion: v1
kind: Namespace
metadata:
  name: stage
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage
provisioner: kubernetes.io/no-provisioner # Indicates that it is manually managed
volumeBindingMode: Immediate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-server-sa
  namespace: storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      serviceAccountName: nfs-server-sa
      initContainers:
      - name: create-shared-dir
        image: busybox:latest
        command: ["/bin/sh", "-c", "mkdir -p /export/share && chmod 777 /export/share"]
        volumeMounts:
        - name: nfs-storage
          mountPath: /export
      containers:
      - name: nfs-server
        image: itsthenetwork/nfs-server-alpine:latest
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - name: nfs-storage
          mountPath: /export
        env:
        - name: SHARED_DIRECTORY
          value: "/export/share"
        - name: PERMITTED
          value: "*"
        - name: READ_ONLY
          value: "rw"
        - name: SYNC
          value: "sync"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 2049
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 2049
          initialDelaySeconds: 10
          periodSeconds: 20
      volumes:
      - name: nfs-storage
        hostPath:
          path: /mnt/data/nfs
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  namespace: storage
spec:
  selector:
    app: nfs-server
  ports:
  - name: nfs
    port: 2049
    targetPort: 2049
  - name: mountd
    port: 20048
    targetPort: 20048
  - name: rpcbind
    port: 111
    targetPort: 111
  clusterIP: None # Headless service for stable DNS within the cluster
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: storage
spec:
  capacity:
    storage: 2Gi
  accessModes:
  - ReadWriteMany
  storageClassName: nfs-storage
  nfs:
    path: /export/share  # Exported shared directory
    server: nfs-server.storage.svc.cluster.local
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.2
    - hard
    - timeo=600
    - retrans=5
    - rsize=1048576
    - wsize=1048576
    - noatime
    - nocto
    - actimeo=1800
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: stage
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-storage # Matches the PV's storageClassName